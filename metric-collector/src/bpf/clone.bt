#!/home/anon/.local/bin/bpftrace

tracepoint:syscalls:sys_enter_access
/ pid == $1 /
{
    $filename = str(args->filename);
    if ($filename != "metric-collector-new-pid") {
        return;
    }

    $new_pid = args->mode;
    if (!@pids[$new_pid]) {
        @pids[$new_pid] = 1;
    }
}

tracepoint:syscalls:sys_enter_clone*
/ @pids[pid] / 
{
    @enter[tid] = 1;
}

tracepoint:syscalls:sys_exit_clone*
/ @pids[pid] /
{
    if (@enter[tid]) {
        delete(@enter[tid]);
    } else {
        printf("%-15s\t%-15s\t%lld\t%ld\n", "NewThread", comm, pid, tid);
    }
}

tracepoint:syscalls:sys_enter_*fork
/ @pids[pid] / 
{
    @enter[tid] = 1
}

tracepoint:syscalls:sys_exit_*fork
/ @enter[tid] /
{
    @pids[args->ret] = 1;
    printf("%-15s\t%-15s\t%ld\n", "NewProcess", comm, args->ret);
    delete(@enter[tid]);
}

tracepoint:syscalls:sys_enter_execve*
/ @pids[pid] / 
{
    printf("%-15s\t%ld\n", "RemoveProcess", pid);
    delete(@pids[pid])
}
